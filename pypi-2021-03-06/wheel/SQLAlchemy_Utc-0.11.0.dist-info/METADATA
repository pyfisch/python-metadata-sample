Metadata-Version: 2.1
Name: SQLAlchemy-Utc
Version: 0.11.0
Summary: SQLAlchemy type to store aware datetime values
Home-page: https://github.com/spoqa/sqlalchemy-utc
Author: Hong Minhee
Author-email: hongminhee@member.fsf.org
License: MIT License
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Programming Language :: Python :: Implementation :: Stackless
Classifier: Programming Language :: SQL
Classifier: Topic :: Database :: Front-Ends
Classifier: Topic :: Software Development
Requires-Dist: setuptools
Requires-Dist: SQLAlchemy (>=0.9.0)

SQLAlchemy-Utc
==============

.. image:: https://badge.fury.io/py/SQLAlchemy-Utc.svg?
   :target: https://pypi.python.org/pypi/SQLAlchemy-Utc
.. image:: https://travis-ci.org/spoqa/sqlalchemy-utc.svg?branch=master
   :target: https://travis-ci.org/spoqa/sqlalchemy-utc
.. image:: https://codecov.io/github/spoqa/sqlalchemy-utc/coverage.svg?branch=master
   :target: https://codecov.io/github/spoqa/sqlalchemy-utc?branch=master

This package provides a drop-in replacement of SQLAlchemy's built-in `DateTime`_
type with ``timezone=True`` option enabled.  Although SQLAlchemy's built-in
``DateTime`` type provides ``timezone=True`` option, since some vendors like
SQLite and MySQL don't provide ``timestamptz`` data type, the option doesn't
make any effect on these vendors.

``UtcDateTime`` type is equivalent to the built-in ``DateTime`` with
``timezone=True`` option enabled on vendors that support ``timestamptz``
e.g. PostgreSQL, but on SQLite or MySQL, it shifts all ``datetime.datetime``
values to UTC offset before store them, and returns always aware
``datetime.datetime`` values through result sets.

Long story short, ``UtcDateTime`` does:

- take only aware ``datetime.datetime``,
- return only aware ``datetime.datetime``,
- never take or return naive ``datetime.datetime``,
- ensure timestamps in database always to be encoded in UTC, and
- work as you'd expect.

A SQLAlchemy helper function, ``utcnow()``, is provided as an alternative
to ``func.now()`` for generating ``UtcDateTime`` values on the server. For
example: ``Column('time', UtcDateTime(), default=utcnow())``.

Written by `Hong Minhee`_ at Spoqa_, and distributed under MIT license.

.. _DateTime: http://docs.sqlalchemy.org/en/latest/core/type_basics.html#sqlalchemy.types.DateTime
.. _Hong Minhee: https://hongminhee.org/
.. _Spoqa: http://www.spoqa.com/


Changelog
=========

0.11.0
------

Released on November 13, 2020.

- Ensured always returning the datetime with UTC timezone.
  [`#8_` by Eduard Christian Dumitrescu]

.. _#8: https://github.com/spoqa/sqlalchemy-utc/pull/8


0.10.0
------

Released on January 25, 2018.

- Dropped support of older Python versions: 2.6, 3.2, and 3.3.
  [`#2`_ by George Leslie-Waksman]
- Added ``sqlalchemy_utc.utcnow()`` function as an alternative to
  ``sqlalchemy.sql.functions.now()`` for generating ``UtcDateTime`` values
  on the database server.  [`#4`_ by George Leslie-Waksman]

.. _#2: https://github.com/spoqa/sqlalchemy-utc/pull/2
.. _#4: https://github.com/spoqa/sqlalchemy-utc/pull/4


0.9.0
-----

First version.  Released on June 22, 2016.


