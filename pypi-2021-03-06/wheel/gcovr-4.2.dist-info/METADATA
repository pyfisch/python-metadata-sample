Metadata-Version: 2.1
Name: gcovr
Version: 4.2
Summary: Generate C/C++ code coverage reports with gcov
Home-page: https://gcovr.com
Maintainer: Lukas Atkinson
Maintainer-email: opensource@lukasatkinson.de
License: BSD
Project-URL: Github, https://github.com/gcovr/gcovr
Project-URL: Issue Tracker, https://github.com/gcovr/gcovr/issues
Keywords: gcc,gcov,lcov,coverage,Jenkins,Cobertura
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Utilities
Requires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*
Requires-Dist: jinja2
Requires-Dist: lxml

gcovr
=====

generate GCC code coverage reports

website_ • documentation_ • bugtracker_ • `GitHub <repo_>`_

|travis-ci-badge| |appveyor-ci-badge| |pypi-badge| |codecov-badge| |gitter-badge|

.. begin abstract

Gcovr provides a utility for managing the use of the GNU gcov_ utility
and generating summarized code coverage results. This command is
inspired by the Python coverage.py_ package, which provides a similar
utility for Python.

The ``gcovr`` command can produce different kinds of coverage reports:

-  default: compact human-readable summaries
-  ``--html``: HTML summaries
-  ``--html-details``: HTML report with annotated source files
-  ``--xml``: machine readable XML reports in Cobertura_ format
-  ``--sonarqube``: machine readable XML reports in Sonarqube format
-  ``--json``: JSON report with source files structure and coverage

Thus, gcovr can be viewed
as a command-line alternative to the lcov_ utility, which runs gcov
and generates an HTML-formatted report.
The development of gcovr was motivated by the need for
text summaries and XML reports.

.. _gcov: http://gcc.gnu.org/onlinedocs/gcc/Gcov.html
.. _coverage.py: http://nedbatchelder.com/code/coverage/
.. _cobertura: http://cobertura.sourceforge.net/
.. _lcov: http://ltp.sourceforge.net/coverage/lcov.php

.. end abstract

Example HTML summary:

.. image:: ./doc/images/screenshot-html.png

Example HTML details:

.. image:: ./doc/images/screenshot-html-details.example.cpp.png

.. begin links

.. _website:        http://gcovr.com/
.. _documentation:  http://gcovr.com/guide.html
.. _repo:       https://github.com/gcovr/gcovr/
.. _bugtracker: https://github.com/gcovr/gcovr/issues
.. |travis-ci-badge| image:: https://travis-ci.org/gcovr/gcovr.svg?branch=master
   :target: https://travis-ci.org/gcovr/gcovr
   :alt: Travis CI build status
.. |appveyor-ci-badge| image:: https://ci.appveyor.com/api/projects/status/6amtekih63rg9f2v/branch/master?svg=true
   :target: https://ci.appveyor.com/project/latk/gcovr-0p8sb/branch/master
   :alt: Appveyor CI build status
.. |pypi-badge| image:: https://img.shields.io/pypi/v/gcovr.svg
   :target: https://pypi.python.org/pypi/gcovr
   :alt: install from PyPI
.. |codecov-badge| image:: https://codecov.io/gh/gcovr/gcovr/branch/master/graph/badge.svg
   :target: https://codecov.io/gh/gcovr/gcovr/branch/master
   :alt: Codecov status
.. |gitter-badge| image:: https://badges.gitter.im/gcovr/gcovr.svg
   :target: https://gitter.im/gcovr/gcovr
   :alt: Gitter chat

.. end links

Installation
------------

.. begin installation

Gcovr is available as a Python package that can be installed via pip_.

.. _pip: https://pip.pypa.io/en/stable

Install newest stable ``gcovr`` release from PyPI:

.. code:: bash

    pip install gcovr

Install development version from GitHub:

.. code:: bash

    pip install git+https://github.com/gcovr/gcovr.git

.. end installation

Quickstart
----------

.. begin quickstart

GCC can instrument the executables to emit coverage data.
You need to recompile your code with the following flags:

::

    -fprofile-arcs -ftest-coverage -g -O0

Next, run your test suite.
This will generate raw coverage files.

Finally, invoke gcovr.
This will print a tabular report on the console.

::

    gcovr -r .

You can also generate detailed HTML reports:

::

    gcovr -r . --html --html-details -o coverage.html

Gcovr will create one HTML report per source file next to the coverage.html summary.

You should run gcovr from the build directory.
The ``-r`` option should point to the root of your project.
This only matters if you have a separate build directory.

For complete documentation, read the `manual <documentation_>`_.


.. end quickstart

Contributing
------------

If you want to report a bug or contribute to gcovr development,
please read our contributing guidelines first:
`<https://github.com/gcovr/gcovr/blob/master/CONTRIBUTING.rst>`_

License
-------

.. begin license

Copyright 2013-2018 the gcovr authors

Copyright 2013 Sandia Corporation.
Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
the U.S. Government retains certain rights in this software.

Gcovr is available under the 3-clause BSD License.
See LICENSE.txt for full details.
See AUTHORS.txt for the full list of contributors.

Gcovr development moved to this repository in September, 2013 from
Sandia National Laboratories.

.. end license

Gcovr is maintained by:

    William Hart,
    John Siirola,
    and Lukas Atkinson.

The following developers contributed to gcovr (ordered alphabetically):

    alex43dm,
    Andrew Stone,
    Arvin Schnell,
    Attie Grande,
    Bernhard Breinbauer,
    Carlos Jenkins,
    Cezary Gapiński
    Christian Taedcke,
    Dave George,
    Dom Postorivo,
    goriy,
    ja11sop,
    James Reynolds,
    Jeremy Fixemer,
    Jessica Levine,
    Joel Klinghed,
    John Siirola,
    Jörg Kreuzberger,
    Kai Blaschke,
    Kevin Cai,
    libPhipp,
    Lukas Atkinson,
    Luke Woydziak,
    Leon Ma,
    Marek Kurdej,
    Martin Mraz,
    Matsumoto Taichi,
    Matthew Stadelman,
    Matthias Schmieder,
    Matthieu Darbois,
    Michael Förderer,
    Michał Pszona,
    Mikael Salson,
    Mikk Leini,
    Nikolaj Schumacher,
    Piotr Dziwinski,
    Phil Clapham,
    Richard Kjerstadius,
    Reto Schneider,
    Robert Rosengren,
    Songmin Li,
    Steven Myint,
    Sylvestre Ledru,
    Tilo Wiedera,
    trapzero,
    Will Thompson,
    William Hart,
    and possibly others.


